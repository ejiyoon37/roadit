spring:

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - email
              - profile
      provider:
        google:
          authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
          token-uri: https://oauth2.googleapis.com/token
          user-info-uri:
            https://www.googleapis.com/oauth2/v3/userinfo

      mvc:
        throw-exception-if-no-handler-found: true


  web:
    resources:
      add-mappings: false

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  devtools:
    restart:
      enabled: true

  mail:
    host: ${SMTP_HOST}
    port: ${SMTP_PORT}
    username: ${SMTP_USER}
    password: ${SMTP_PASSWORD}
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
    default-encoding: UTF-8



server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    whitelabel.enabled: false

logging:
  level:
    root: info
    org.springframework.web: DEBUG
    org.springframework.boot: DEBUG
    org.springframework.validation: DEBUG
    org.springframework.boot.autoconfigure: warn
    org.hibernate.SQL: DEBUG
    org.hibernate.type: trace

jwt:
  secret: ${JWT_SECRET_KEY}
  access-token-expiration: 900000      # 15분 유효
  refresh-token-expiration: 2592000000  # 테스트 동안 30일

cloud:
  aws:
    s3:
      bucket: ${S3_BUCKET_NAME}
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    region:
      static: ap-northeast-2
    stack:
      auto: false
